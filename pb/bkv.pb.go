// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: bkv.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ResponseStatus int32

const (
	ResponseStatus_CREATED  ResponseStatus = 0
	ResponseStatus_FOUND    ResponseStatus = 1
	ResponseStatus_NOTFOUND ResponseStatus = 2
	ResponseStatus_DELETED  ResponseStatus = 3
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "CREATED",
		1: "FOUND",
		2: "NOTFOUND",
		3: "DELETED",
	}
	ResponseStatus_value = map[string]int32{
		"CREATED":  0,
		"FOUND":    1,
		"NOTFOUND": 2,
		"DELETED":  3,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bkv_proto_enumTypes[0].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_bkv_proto_enumTypes[0]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_bkv_proto_rawDescGZIP(), []int{0}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bkv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_bkv_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bkv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_bkv_proto_rawDescGZIP(), []int{1}
}

func (x *SetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bkv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_bkv_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            ResponseStatus       `protobuf:"varint,1,opt,name=status,proto3,enum=bkvpb.ResponseStatus" json:"status,omitempty"`
	ResponseTimestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=response_timestamp,json=responseTimestamp,proto3" json:"response_timestamp,omitempty"`
	Value             string               `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bkv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_bkv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_bkv_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_CREATED
}

func (x *Response) GetResponseTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.ResponseTimestamp
	}
	return nil
}

func (x *Response) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_bkv_proto protoreflect.FileDescriptor

var file_bkv_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x6b, 0x76,
	0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x9a, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x6b, 0x76, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0xca,
	0x01, 0x0a, 0x0a, 0x42, 0x4b, 0x56, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x11, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12,
	0x11, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x62, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bkv_proto_rawDescOnce sync.Once
	file_bkv_proto_rawDescData = file_bkv_proto_rawDesc
)

func file_bkv_proto_rawDescGZIP() []byte {
	file_bkv_proto_rawDescOnce.Do(func() {
		file_bkv_proto_rawDescData = protoimpl.X.CompressGZIP(file_bkv_proto_rawDescData)
	})
	return file_bkv_proto_rawDescData
}

var file_bkv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bkv_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bkv_proto_goTypes = []interface{}{
	(ResponseStatus)(0),         // 0: bkvpb.ResponseStatus
	(*GetRequest)(nil),          // 1: bkvpb.GetRequest
	(*SetRequest)(nil),          // 2: bkvpb.SetRequest
	(*DeleteRequest)(nil),       // 3: bkvpb.DeleteRequest
	(*Response)(nil),            // 4: bkvpb.Response
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_bkv_proto_depIdxs = []int32{
	0, // 0: bkvpb.Response.status:type_name -> bkvpb.ResponseStatus
	5, // 1: bkvpb.Response.response_timestamp:type_name -> google.protobuf.Timestamp
	1, // 2: bkvpb.BKVService.Get:input_type -> bkvpb.GetRequest
	2, // 3: bkvpb.BKVService.Set:input_type -> bkvpb.SetRequest
	1, // 4: bkvpb.BKVService.BatchGet:input_type -> bkvpb.GetRequest
	2, // 5: bkvpb.BKVService.BatchSet:input_type -> bkvpb.SetRequest
	4, // 6: bkvpb.BKVService.Get:output_type -> bkvpb.Response
	4, // 7: bkvpb.BKVService.Set:output_type -> bkvpb.Response
	4, // 8: bkvpb.BKVService.BatchGet:output_type -> bkvpb.Response
	4, // 9: bkvpb.BKVService.BatchSet:output_type -> bkvpb.Response
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bkv_proto_init() }
func file_bkv_proto_init() {
	if File_bkv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bkv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bkv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bkv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bkv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bkv_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bkv_proto_goTypes,
		DependencyIndexes: file_bkv_proto_depIdxs,
		EnumInfos:         file_bkv_proto_enumTypes,
		MessageInfos:      file_bkv_proto_msgTypes,
	}.Build()
	File_bkv_proto = out.File
	file_bkv_proto_rawDesc = nil
	file_bkv_proto_goTypes = nil
	file_bkv_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BKVServiceClient is the client API for BKVService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BKVServiceClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Response, error)
	BatchGet(ctx context.Context, opts ...grpc.CallOption) (BKVService_BatchGetClient, error)
	BatchSet(ctx context.Context, opts ...grpc.CallOption) (BKVService_BatchSetClient, error)
}

type bKVServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBKVServiceClient(cc grpc.ClientConnInterface) BKVServiceClient {
	return &bKVServiceClient{cc}
}

func (c *bKVServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/bkvpb.BKVService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bKVServiceClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/bkvpb.BKVService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bKVServiceClient) BatchGet(ctx context.Context, opts ...grpc.CallOption) (BKVService_BatchGetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BKVService_serviceDesc.Streams[0], "/bkvpb.BKVService/BatchGet", opts...)
	if err != nil {
		return nil, err
	}
	x := &bKVServiceBatchGetClient{stream}
	return x, nil
}

type BKVService_BatchGetClient interface {
	Send(*GetRequest) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type bKVServiceBatchGetClient struct {
	grpc.ClientStream
}

func (x *bKVServiceBatchGetClient) Send(m *GetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bKVServiceBatchGetClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bKVServiceClient) BatchSet(ctx context.Context, opts ...grpc.CallOption) (BKVService_BatchSetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BKVService_serviceDesc.Streams[1], "/bkvpb.BKVService/BatchSet", opts...)
	if err != nil {
		return nil, err
	}
	x := &bKVServiceBatchSetClient{stream}
	return x, nil
}

type BKVService_BatchSetClient interface {
	Send(*SetRequest) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type bKVServiceBatchSetClient struct {
	grpc.ClientStream
}

func (x *bKVServiceBatchSetClient) Send(m *SetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bKVServiceBatchSetClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BKVServiceServer is the server API for BKVService service.
type BKVServiceServer interface {
	Get(context.Context, *GetRequest) (*Response, error)
	Set(context.Context, *SetRequest) (*Response, error)
	BatchGet(BKVService_BatchGetServer) error
	BatchSet(BKVService_BatchSetServer) error
}

// UnimplementedBKVServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBKVServiceServer struct {
}

func (*UnimplementedBKVServiceServer) Get(context.Context, *GetRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBKVServiceServer) Set(context.Context, *SetRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedBKVServiceServer) BatchGet(BKVService_BatchGetServer) error {
	return status.Errorf(codes.Unimplemented, "method BatchGet not implemented")
}
func (*UnimplementedBKVServiceServer) BatchSet(BKVService_BatchSetServer) error {
	return status.Errorf(codes.Unimplemented, "method BatchSet not implemented")
}

func RegisterBKVServiceServer(s *grpc.Server, srv BKVServiceServer) {
	s.RegisterService(&_BKVService_serviceDesc, srv)
}

func _BKVService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BKVServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bkvpb.BKVService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BKVServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BKVService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BKVServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bkvpb.BKVService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BKVServiceServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BKVService_BatchGet_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BKVServiceServer).BatchGet(&bKVServiceBatchGetServer{stream})
}

type BKVService_BatchGetServer interface {
	Send(*Response) error
	Recv() (*GetRequest, error)
	grpc.ServerStream
}

type bKVServiceBatchGetServer struct {
	grpc.ServerStream
}

func (x *bKVServiceBatchGetServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bKVServiceBatchGetServer) Recv() (*GetRequest, error) {
	m := new(GetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BKVService_BatchSet_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BKVServiceServer).BatchSet(&bKVServiceBatchSetServer{stream})
}

type BKVService_BatchSetServer interface {
	Send(*Response) error
	Recv() (*SetRequest, error)
	grpc.ServerStream
}

type bKVServiceBatchSetServer struct {
	grpc.ServerStream
}

func (x *bKVServiceBatchSetServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bKVServiceBatchSetServer) Recv() (*SetRequest, error) {
	m := new(SetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BKVService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bkvpb.BKVService",
	HandlerType: (*BKVServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _BKVService_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _BKVService_Set_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BatchGet",
			Handler:       _BKVService_BatchGet_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "BatchSet",
			Handler:       _BKVService_BatchSet_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "bkv.proto",
}
